package View;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;

import javax.imageio.ImageIO;
import javax.swing.JPanel;

public class MapPanel extends JPanel {
	
	private BufferedImage tile;
	private ArrayList<Character[]> matrix;
	
	public MapPanel() {
		setBounds(0, 0, 300, 300);
		setLayout(null);
	}
	
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		criaMapa(g);
		
		
	}
	
	private void criaMapa(Graphics g) {
		int i = 0;
		int j = 0;
		
		for (Iterator iterator = matrix.iterator(); iterator.hasNext();) {
			Character[] c = (Character[]) iterator.next();
			
			for (Character character : c) {
				switch (character) {
				case'U':
					criaTerreno("powerUp.png", i, j, g);
					break;
				case'.':
					criaTerreno("default.png", i, j, g);
					break;
				case'P':
					criaTerreno("hole.png", i, j, g);
					break;
				case'T':
					criaTerreno("teletransport.png", i, j, g);
					break;
				case'D':
					criaTerreno("bigEnemy.png", i, j, g);
					break;
				case'O':
					criaTerreno("gold.png", i, j, g);
					break;
				case'd':
					criaTerreno("littleEnemy.png", i, j, g);
					break;
				default:
					System.out.println("Caracter desconhecido");
					break;
				}
				
				j++;
			}
			
			i++;
		}	
	}
	
	private void criaTerreno(String s, int x, int y, Graphics g) {	
		try {
			tile = ImageIO.read(new File("Images/"+s));
			g.drawImage(tile, x * 25, y * 25, null);
		} catch(IOException e) {
			System.out.println(e.getMessage());
			System.exit(1);
		}
	}
	
	public void setMatrix(ArrayList<Character[]> matrix) {
		this.matrix = matrix;
	}

}
